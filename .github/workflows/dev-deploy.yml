name: CI Dev Deployment

on:
  push:
    branches: [ main ]
permissions:
  contents: write  # 允許 GH Actions 建立 release


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ 先把 repo checkout 下來
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ 建立測試 artifact
      - name: Create test artifact
        run: |
          echo "This is a test build" > build.txt
          zip -r build.zip build.txt

      # 3️⃣ 上傳 artifact 以便後續部署使用
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Run Automated Tests
        run: |
          echo "Running automated tests..."
          sleep 2
          echo "✅ Tests passed successfully"


  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      # 1️⃣ 先 checkout repo，建立 .git，避免 gh release 出錯
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ 下載 build job 上傳的 artifact
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      # 3️⃣ 建立 dev release
      - name: Create Dev Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 生成唯一 tag
          TAG="dev-$(date +'%Y%m%d-%H%M%S')"
          NOTE="Automated test release for Dev environment."
          echo "Creating release with tag: $TAG"
          gh release create "$TAG" build.zip --notes "$NOTE"
  deploy-staging:
    needs: test           #依賴 test job
    runs-on: ubuntu-latest
    environment: staging        # GitHub Environments → 新增 staging
    steps:
      # 1️⃣ Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ 下載 artifact
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      # 3️⃣ 建立 staging release
      - name: Create Staging Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="staging-$(date +'%Y%m%d-%H%M%S')"
          NOTE="Testing pre-production release."
          echo "Creating Staging release: $TAG"
          gh release create "$TAG" build.zip --notes "$NOTE"
  deploy-production:
    needs: deploy-staging       # 要先完成 staging
    runs-on: ubuntu-latest
    environment: production     # GitHub Environments → 新增 production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Create Production Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="prod-$(date +'%Y%m%d-%H%M%S')"
          NOTE="Production release - requires manual approval."
          echo "Creating Production release: $TAG"
          gh release create "$TAG" build.zip --notes "$NOTE"
